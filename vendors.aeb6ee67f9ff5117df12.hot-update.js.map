{"version":3,"sources":["webpack:///./node_modules/cozy-harvest-lib/dist/logger.js","webpack:///./node_modules/cozy-harvest-lib/dist/services/budget-insight.js","webpack:///./node_modules/cozy-harvest-lib/dist/components/TriggerManager.js"],"names":[],"mappings":"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Y;AACd;AACA;AACA,wBAAwB,yDAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA,2BAA2B,+EAAiB;AAC5C;AACA,MAAM,iEAAmB;AACzB;;AAEA,eAAe,iEAAmB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,4DAAU;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,2EAAc;AACtC;AACA;AACA,uBAAuB,4DAAU;AACjC;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,4DAAU;;AAE1D;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,0DAAQ;AAC7C;AACA,wBAAwB,sDAAI;AAC5B;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA,kCAAkC,+EAAiB;AACnD;AACA,MAAM,iEAAmB;AACzB;AACA,eAAe,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA,0BAA0B,+EAAiB;AAC3C;AACA,MAAM,iEAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,gDAAM;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iFAAoB;AAC3C;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,gDAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,6CAA6C,0DAAQ;;AAErD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA,8BAA8B,+EAAiB;AAC/C;AACA,MAAM,iEAAmB;AACzB;AACA,eAAe,iEAAmB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0DAAQ;AAC3B,uCAAuC,0DAAQ;;AAE/C;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,0DAAQ;AACvC,oBAAoB,sDAAO;AAC3B;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,+BAA+B,+EAAiB;AAChD;AACA,MAAM,iEAAmB;AACzB;;AAEA,eAAe,iEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAU;AAClC,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,yDAAU;AAClC,uBAAuB,kDAAG;AAC1B,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,gDAAM,2FAA2F;;AAEjH,gBAAgB,gDAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,6CAAK,eAAe,mDAAS;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,eAAe,6CAAK;AACpB;AACA,SAAS,EAAE,6CAAK,eAAe,yEAAO;AACtC;AACA,SAAS,GAAG,6CAAK;AACjB;;AAEA,aAAa,6CAAK;AAClB;AACA;AACA;AACA;AACA,OAAO,EAAE,6CAAK;AACd;AACA,OAAO,sBAAsB,6CAAK,eAAe,0DAAgB;AACjE;AACA;AACA;AACA,OAAO,sBAAsB,6CAAK,eAAe,6CAAK,mCAAmC,6CAAK,eAAe,+EAAe;AAC5H;AACA;AACA,SAAS;AACT;AACA,OAAO,GAAG,6CAAK,eAAe,qDAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC,CAAC,gDAAS;AACX;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,WAAW,kDAAS;;AAEpB;AACA;AACA;AACA,YAAY;AACZ;AACA,aAAa,kDAAS;;AAEtB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,aAAa,kDAAS;;AAEtB;AACA;AACA,YAAY;AACZ;AACA,WAAW,kDAAS;;AAEpB;AACA;AACA;AACA,YAAY;AACZ;AACA,WAAW,kDAAS;;AAEpB;AACA;AACA;AACA,SAAS,kDAAS,YAAY,kDAAS,SAAS,kDAAS;;AAEzD;AACA;AACA;AACA,UAAU,kDAAS;;AAEnB;AACA;AACA;AACA,KAAK,kDAAS;AACd;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,iBAAiB,kDAAS;;AAE1B;AACA;AACA,YAAY;AACZ;AACA,mBAAmB,kDAAS;;AAE5B;AACA;AACA,YAAY;AACZ;AACA,iBAAiB,kDAAS;;AAE1B;AACA;AACA,YAAY;AACZ;AACA,yBAAyB,kDAAS;;AAElC;AACA;AACA,YAAY;AACZ;AACA,eAAe,kDAAS;;AAExB;AACA;AACA,YAAY;AACZ;AACA,eAAe,kDAAS;;AAExB;AACA;AACA,YAAY;AACZ;AACA,uBAAuB,kDAAS;;AAEhC;AACA;AACA;AACA,kBAAkB,kDAAS;;AAE3B;AACA;AACA,YAAY;AACZ;AACA,iBAAiB,kDAAS;AAC1B;AACA,0BAA0B,mDAAI,CAAC,gFAAS,IAAI,uDAAU,EAAE,8DAAe,EAAE,kEAAa,CAAC,8DAAiB,EAAE,2DAAc,EAAE,iEAAoB,EAAE,wEAAiB,uBAAuB;AACxL;AACA;;AAEO;AACP,SAAS,6CAAK,eAAe,8DAAoB,QAAQ,6CAAK,eAAe,8EAAY,QAAQ,6CAAK;AACtG,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qFAAwB;;AAE3C,SAAS,6CAAK,eAAe,yDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,6CAAK,+BAA+B,qEAAQ,GAAG;AAC1D;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEe,mFAAoB,E","file":"vendors.aeb6ee67f9ff5117df12.hot-update.js","sourcesContent":["import minilog_ from 'minilog';\nvar inBrowser = typeof window !== 'undefined';\nvar minilog = inBrowser && window.minilog || minilog_;\nvar logger = minilog('cozy-harvest-lib');\nminilog.suggest.allow('cozy-harvest-lib', 'log');\nminilog.suggest.allow('cozy-harvest-lib', 'info');\nexport default logger;","import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport merge from 'lodash/merge';\nimport clone from 'lodash/clone';\nimport defaults from 'lodash/defaults';\nimport { waitForRealtimeResult } from './jobUtils';\nimport { createBIConnection, updateBIConnection, getBIConfig, getBIModeFromCozyURL, isBudgetInsightConnector } from './biUtils';\nimport assert from '../assert';\nimport { mkConnAuth } from 'cozy-bi-auth';\n\nvar getBIConnectionIdFromAccount = function getBIConnectionIdFromAccount(account) {\n  return get(account, 'data.auth.bi.connId');\n};\n\nvar throwWrappedError = function throwWrappedError(originalError, namespace) {\n  var error = new Error(\"\".concat(namespace, \" failed (\").concat(originalError.message, \")\"));\n  error.original = originalError;\n  throw error;\n};\n\nvar createTemporaryToken =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var client, account, konnector, jobResponse, event;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            client = _ref.client, account = _ref.account, konnector = _ref.konnector;\n            _context.prev = 1;\n            assert(account && account._id, 'createTemporaryToken: Invalid account for createTemporaryToken');\n            assert(konnector.slug, 'createTemporaryToken: No konnector slug');\n            _context.next = 6;\n            return client.stackClient.jobs.create('konnector', {\n              mode: 'getTemporaryToken',\n              konnector: konnector.slug,\n              account: account._id\n            });\n\n          case 6:\n            jobResponse = _context.sent;\n            _context.next = 9;\n            return waitForRealtimeResult(client, jobResponse.data.attributes);\n\n          case 9:\n            event = _context.sent;\n            return _context.abrupt(\"return\", event.data.code);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            throwWrappedError(_context.t0, 'createTemporaryToken');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function createTemporaryToken(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Ensures a BI connection is ready\n *\n *  - Calls the getBITemporaryToken mode of the konnector\n *\n * Then:\n * If no BI connection is present in the io.cozy.accounts:\n *  - Creates the BI connection using user supplied data\n * If a BI connection exists:\n *  - Updates the BI connection using user supplied data\n *\n * @param  {Client} options.client\n * @param  {io.cozy.accounts} options.account\n * @param  {io.cozy.konnectors} options.konnector\n * @return {BIConnection}\n */\n\n\nexport var createOrUpdateBIConnection =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref3) {\n    var account, client, konnector, mode, config, connId, tempToken, credentials, credsToSend, connection;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            account = _ref3.account, client = _ref3.client, konnector = _ref3.konnector;\n            _context2.prev = 1;\n            mode = getBIModeFromCozyURL(client.stackClient.uri);\n            config = getBIConfig(mode);\n            connId = getBIConnectionIdFromAccount(account);\n            _context2.next = 7;\n            return createTemporaryToken({\n              account: account,\n              client: client,\n              konnector: konnector\n            });\n\n          case 7:\n            tempToken = _context2.sent;\n            assert(tempToken, 'No temporary token');\n            credentials = _objectSpread({}, account.auth); // The konnector can have \"baked-in\" parameters that need to be passed in the\n            // auth. This is the case for example for some konnectors for the bankId\n            // parameter\n\n            defaults(credentials, konnector.parameters);\n            _context2.next = 13;\n            return mkConnAuth(config, credentials);\n\n          case 13:\n            credsToSend = _context2.sent;\n            _context2.next = 16;\n            return connId ? updateBIConnection(config, connId, credsToSend, tempToken) : createBIConnection(config, credsToSend, tempToken);\n\n          case 16:\n            connection = _context2.sent;\n            return _context2.abrupt(\"return\", connection);\n\n          case 20:\n            _context2.prev = 20;\n            _context2.t0 = _context2[\"catch\"](1);\n            throwWrappedError(_context2.t0, 'createOrUpdateBIConnection');\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 20]]);\n  }));\n\n  return function createOrUpdateBIConnection(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar SENSIBLE_FIELDS = ['password', 'secret', 'code', 'dob'];\n\nvar removeSensibleDataFromAccount = function removeSensibleDataFromAccount(fullAccount) {\n  var account = clone(fullAccount);\n  account.auth = omit(account.auth, SENSIBLE_FIELDS);\n  return account;\n};\n\nexport var onBIAccountCreation =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref5) {\n    var account, client, konnector, saveAccount, _ref5$createOrUpdateB, createOrUpdateBIConnectionFn, fullAccount, biConnection;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            account = _ref5.account, client = _ref5.client, konnector = _ref5.konnector, saveAccount = _ref5.saveAccount, _ref5$createOrUpdateB = _ref5.createOrUpdateBIConnectionFn, createOrUpdateBIConnectionFn = _ref5$createOrUpdateB === void 0 ? createOrUpdateBIConnection : _ref5$createOrUpdateB;\n            fullAccount = account;\n            account = removeSensibleDataFromAccount(account);\n            _context3.next = 5;\n            return saveAccount(konnector, account);\n\n          case 5:\n            account = _context3.sent;\n            _context3.next = 8;\n            return createOrUpdateBIConnectionFn({\n              account: _objectSpread({}, fullAccount, {\n                _id: account._id\n              }),\n              client: client,\n              konnector: konnector\n            });\n\n          case 8:\n            biConnection = _context3.sent;\n            return _context3.abrupt(\"return\", merge(account, {\n              data: {\n                auth: {\n                  bi: {\n                    connId: biConnection.id\n                  }\n                }\n              }\n            }));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function onBIAccountCreation(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var konnectorPolicy = {\n  name: 'budget-insight',\n  match: isBudgetInsightConnector,\n  saveInVault: false,\n  onAccountCreation: onBIAccountCreation\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport flow from 'lodash/flow';\nimport { withMutations, withClient } from 'cozy-client';\nimport { CozyFolder as CozyFolderClass, Account } from 'cozy-doctypes';\nimport { translate } from 'cozy-ui/transpiled/react/I18n';\nimport MuiCozyTheme from 'cozy-ui/transpiled/react/MuiCozyTheme';\nimport Spinner from 'cozy-ui/transpiled/react/Spinner';\nimport { ModalBackButton } from 'cozy-ui/transpiled/react/Modal';\nimport { VaultUnlocker, withVaultClient, CipherType } from 'cozy-keys-lib';\nimport AccountForm from './AccountForm';\nimport OAuthForm from './OAuthForm';\nimport accountsMutations from '../connections/accounts';\nimport { triggersMutations } from '../connections/triggers';\nimport filesMutations from '../connections/files';\nimport permissionsMutations from '../connections/permissions';\nimport accounts from '../helpers/accounts';\nimport cron from '../helpers/cron';\nimport konnectors from '../helpers/konnectors';\nimport triggers from '../helpers/triggers';\nimport TriggerLauncher from './TriggerLauncher';\nimport VaultCiphersList from './VaultCiphersList';\nimport manifest from '../helpers/manifest';\nimport HarvestVaultProvider from './HarvestVaultProvider';\nimport clone from 'lodash/clone';\nimport flag from 'cozy-flags';\nimport logger from '../logger';\nimport { createOrUpdateCipher } from '../models/cipherUtils';\nimport { konnectorPolicy as biKonnectorPolicy } from '../services/budget-insight';\nvar defaultKonnectorPolicy = {\n  accountContainsAuth: true,\n  saveInVault: true,\n  onAccountCreation: null,\n  match: function match() {\n    return true;\n  },\n  name: 'default'\n};\nvar policies = [flag('bi-konnector-policy') ? biKonnectorPolicy : null, defaultKonnectorPolicy].filter(Boolean);\nlogger.info('Available konnector policies', policies);\nvar IDLE = 'IDLE';\nvar RUNNING = 'RUNNING';\nvar MODAL_PLACE_ID = 'coz-harvest-modal-place';\n\nvar findKonnectorPolicy = function findKonnectorPolicy(konnector) {\n  var policy = policies.find(function (policy) {\n    return policy.match(konnector);\n  });\n  logger.info(\"Using \".concat(policy.name, \" konnector policy for \").concat(konnector.slug));\n  return policy;\n};\n/**\n * Creates or updates an io.cozy.accounts\n * Used as a form submit handler\n *\n * @param  {io.cozy.account} options.account - Existing io.cozy.account or object\n * @param  {[type]} options.cipher - Vault cipher if vault has been unlocked\n * @param  {CozyClient} options.client - A cozy client\n * @param  {io.cozy.konnector} options.konnector - Konnector to which the account is linked\n * @param  {KonnectorPolicy} options.konnectorPolicy - Controls if auth is saved in io.cozy.accounts\n * and if auth is saved into the vault\n * @param  {function} options.saveAccount\n * @param  {object} options.userData\n * @param  {function} options.ensureTrigger\n */\n\n\nvar createOrUpdateAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var account, cipher, client, konnector, konnectorPolicy, saveAccount, userCredentials, isUpdate, onAccountCreation, saveInVault, accountToSave;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            account = _ref.account, cipher = _ref.cipher, client = _ref.client, konnector = _ref.konnector, konnectorPolicy = _ref.konnectorPolicy, saveAccount = _ref.saveAccount, userCredentials = _ref.userCredentials;\n            isUpdate = !!account;\n            onAccountCreation = konnectorPolicy.onAccountCreation, saveInVault = konnectorPolicy.saveInVault;\n            accountToSave = clone(account);\n            accountToSave = accounts.resetState(accountToSave);\n            accountToSave = accounts.setSessionResetIfNecessary(accountToSave, userCredentials);\n            accountToSave = isUpdate ? accounts.mergeAuth(accountToSave, userCredentials) : accounts.build(konnector, userCredentials);\n\n            if (!onAccountCreation) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 10;\n            return onAccountCreation({\n              client: client,\n              account: accountToSave,\n              konnector: konnector,\n              saveAccount: saveAccount\n            });\n\n          case 10:\n            accountToSave = _context.sent;\n\n          case 11:\n            if (cipher && saveInVault) {\n              accountToSave = accounts.setVaultCipherRelationship(accountToSave, cipher.id);\n            } else {\n              // eslint-disable-next-line no-console\n              logger.warn('No cipher passed when creating/updating account, account will not be linked to cipher');\n            }\n\n            _context.next = 14;\n            return saveAccount(konnector, accountToSave);\n\n          case 14:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createOrUpdateAccount(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Wraps conditionally its children inside VaultUnlocker, only if\n * props.konnector's policy tells to saveInVault\n */\n\n\nvar KonnectorVaultUnlocker = function KonnectorVaultUnlocker(_ref3) {\n  var konnector = _ref3.konnector,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"konnector\", \"children\"]);\n\n  var konnectorPolicy = findKonnectorPolicy(konnector);\n\n  if (konnectorPolicy.saveInVault) {\n    return React.createElement(VaultUnlocker, props, children);\n  } else {\n    logger.info('Not rendering VaultUnlocker since konnectorPolicy.saveInVault = false');\n    return React.createElement(React.Fragment, null, children);\n  }\n};\n/**\n * If the vault is not going to be unlocked, we go directly to accountForm\n * step\n * If we need the vault unlocker, the `null` step represents\n *\n * - either vault locked\n * - ciphers being loaded\n *\n * TODO Find a way not to have to check konnectorPolicy here and again through\n * KonnectorVaultUnlocker\n */\n\n\nvar getInitialStep = function getInitialStep(_ref4) {\n  var account = _ref4.account,\n      konnector = _ref4.konnector;\n  var konnectorPolicy = findKonnectorPolicy(konnector);\n\n  if (konnectorPolicy.saveInVault) {\n    return account ? 'accountForm' : null;\n  } else {\n    return 'accountForm';\n  }\n};\n/**\n * Displays the login form and on submission will create the account, triggers and folders.\n * After that it calls TriggerLauncher to run the konnector.\n *\n * @type {Component}\n */\n\n\nexport var DumbTriggerManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DumbTriggerManager, _Component);\n\n  function DumbTriggerManager(props) {\n    var _this;\n\n    _classCallCheck(this, DumbTriggerManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DumbTriggerManager).call(this, props));\n    var account = props.account,\n        konnector = props.konnector;\n    _this.handleNewAccount = _this.handleNewAccount.bind(_assertThisInitialized(_this));\n    _this.handleOAuthAccountId = _this.handleOAuthAccountId.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleCipherSelect = _this.handleCipherSelect.bind(_assertThisInitialized(_this));\n    _this.showCiphersList = _this.showCiphersList.bind(_assertThisInitialized(_this));\n    _this.handleVaultUnlock = _this.handleVaultUnlock.bind(_assertThisInitialized(_this));\n    _this.state = {\n      account: account,\n      error: null,\n      status: IDLE,\n      step: getInitialStep(props),\n      selectedCipher: undefined,\n      showBackButton: false,\n      ciphers: []\n    };\n    return _this;\n  }\n\n  _createClass(DumbTriggerManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.CozyFolder = CozyFolderClass.copyWithClient(this.props.client);\n    }\n    /**\n     * Ensure that a trigger will exist, with valid destination folder with\n     * permissions and references\n     * TODO move this to Cozy-Doctypes https://github.com/cozy/cozy-libs/issues/743\n     *\n     * @param  {object}  account\n     * @return {Object} Trigger document\n     */\n\n  }, {\n    key: \"ensureTrigger\",\n    value: function () {\n      var _ensureTrigger = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(account) {\n        var _this$props, addPermission, addReferencesTo, createDirectoryByPath, createTrigger, statDirectoryByPath, konnector, t, trigger, folder, _ref5, _ref6, adminFolder, photosFolder, path;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props = this.props, addPermission = _this$props.addPermission, addReferencesTo = _this$props.addReferencesTo, createDirectoryByPath = _this$props.createDirectoryByPath, createTrigger = _this$props.createTrigger, statDirectoryByPath = _this$props.statDirectoryByPath, konnector = _this$props.konnector, t = _this$props.t;\n                trigger = this.props.trigger;\n\n                if (!trigger) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", trigger);\n\n              case 4:\n                if (!konnectors.needsFolder(konnector)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                _context2.next = 7;\n                return Promise.all([this.CozyFolder.ensureMagicFolder(this.CozyFolder.magicFolders.ADMINISTRATIVE, \"/\".concat(t('folder.administrative'))), this.CozyFolder.ensureMagicFolder(this.CozyFolder.magicFolders.PHOTOS, \"/\".concat(t('folder.photos')))]);\n\n              case 7:\n                _ref5 = _context2.sent;\n                _ref6 = _slicedToArray(_ref5, 2);\n                adminFolder = _ref6[0];\n                photosFolder = _ref6[1];\n                path = konnectors.buildFolderPath(konnector, account, {\n                  administrative: adminFolder.path,\n                  photos: photosFolder.path\n                });\n                _context2.next = 14;\n                return statDirectoryByPath(path);\n\n              case 14:\n                _context2.t0 = _context2.sent;\n\n                if (_context2.t0) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 18;\n                return createDirectoryByPath(path);\n\n              case 18:\n                _context2.t0 = _context2.sent;\n\n              case 19:\n                folder = _context2.t0;\n                _context2.next = 22;\n                return addPermission(konnector, konnectors.buildFolderPermission(folder));\n\n              case 22:\n                _context2.next = 24;\n                return addReferencesTo(konnector, [folder]);\n\n              case 24:\n                _context2.next = 26;\n                return createTrigger(triggers.buildAttributes({\n                  account: account,\n                  cron: cron.fromKonnector(konnector),\n                  folder: folder,\n                  konnector: konnector\n                }));\n\n              case 26:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function ensureTrigger(_x2) {\n        return _ensureTrigger.apply(this, arguments);\n      }\n\n      return ensureTrigger;\n    }()\n    /**\n     * OAuth Form success handler. OAuthForm retrieves an account id created by the\n     * cozy stack\n     * @param  {string}  accountId\n     */\n\n  }, {\n    key: \"handleOAuthAccountId\",\n    value: function () {\n      var _handleOAuthAccountId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(accountId) {\n        var findAccount, oAuthAccount;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                findAccount = this.props.findAccount;\n                _context3.prev = 1;\n                this.setState({\n                  error: null,\n                  status: RUNNING\n                });\n                _context3.next = 5;\n                return findAccount(accountId);\n\n              case 5:\n                oAuthAccount = _context3.sent;\n                _context3.next = 8;\n                return this.handleNewAccount(oAuthAccount);\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](1);\n                this.handleError(_context3.t0);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 11]]);\n      }));\n\n      function handleOAuthAccountId(_x3) {\n        return _handleOAuthAccountId.apply(this, arguments);\n      }\n\n      return handleOAuthAccountId;\n    }()\n    /**\n     * Get the ID of the cipher selected by the user in the list\n     *\n     * @returns {string|null} the cipher ID\n     */\n\n  }, {\n    key: \"getSelectedCipherId\",\n    value: function getSelectedCipherId() {\n      var selectedCipher = this.state.selectedCipher;\n      return selectedCipher && selectedCipher.id;\n    }\n    /**\n     * - Ensures a cipher is created for the authentication data\n     *   Find cipher via identifier / password\n     * - Creates io.cozy.accounts\n     * - Links cipher to account\n     * - Saves account\n     */\n\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var data,\n            _this$props2,\n            client,\n            konnector,\n            saveAccount,\n            vaultClient,\n            account,\n            konnectorPolicy,\n            cipher,\n            cipherId,\n            savedAccount,\n            _args4 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n                _this$props2 = this.props, client = _this$props2.client, konnector = _this$props2.konnector, saveAccount = _this$props2.saveAccount, vaultClient = _this$props2.vaultClient;\n                account = this.state.account;\n                this.setState({\n                  error: null,\n                  status: RUNNING\n                });\n                konnectorPolicy = findKonnectorPolicy(konnector);\n                _context4.prev = 5;\n                logger.log('konnector policy', konnectorPolicy);\n\n                if (!konnectorPolicy.saveInVault) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                cipherId = this.getSelectedCipherId();\n                _context4.next = 11;\n                return createOrUpdateCipher(vaultClient, cipherId, {\n                  account: account,\n                  konnector: konnector,\n                  userCredentials: data\n                });\n\n              case 11:\n                cipher = _context4.sent;\n                _context4.next = 15;\n                break;\n\n              case 14:\n                // eslint-disable-next-line no-console\n                logger.info('Bypassing cipher creation because of konnector account policy');\n\n              case 15:\n                _context4.next = 17;\n                return createOrUpdateAccount({\n                  client: client,\n                  account: account,\n                  cipher: cipher,\n                  konnector: konnector,\n                  konnectorPolicy: konnectorPolicy,\n                  saveAccount: saveAccount,\n                  ensureTrigger: this.ensureTrigger.bind(this),\n                  userCredentials: data\n                });\n\n              case 17:\n                savedAccount = _context4.sent;\n                _context4.next = 20;\n                return this.handleNewAccount(accounts.mergeAuth(savedAccount, data));\n\n              case 20:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 23:\n                _context4.prev = 23;\n                _context4.t0 = _context4[\"catch\"](5);\n                return _context4.abrupt(\"return\", this.handleError(_context4.t0));\n\n              case 26:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[5, 23]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n    /**\n     * Account creation success handler\n     * @param  {Object}  account Created io.cozy.accounts document\n     * @return {Object}          io.cozy.jobs document, runned with account data\n     */\n\n  }, {\n    key: \"handleNewAccount\",\n    value: function () {\n      var _handleNewAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(account) {\n        var trigger;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.ensureTrigger(account);\n\n              case 2:\n                trigger = _context5.sent;\n                this.setState({\n                  account: account,\n                  status: IDLE\n                });\n                _context5.next = 6;\n                return this.props.launch(trigger);\n\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleNewAccount(_x4) {\n        return _handleNewAccount.apply(this, arguments);\n      }\n\n      return handleNewAccount;\n    }()\n    /**\n     * TODO rename state error to accountError\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      logger.error('TriggerManager handleError', error);\n      var onError = this.props.onError;\n      this.setState({\n        error: error,\n        state: IDLE\n      });\n      if (typeof onError === 'function') onError(error);\n    }\n  }, {\n    key: \"handleCipherSelect\",\n    value: function handleCipherSelect(selectedCipher) {\n      var _this2 = this;\n\n      var konnector = this.props.konnector;\n      var account = this.cipherToAccount(selectedCipher);\n      var values = manifest.getFieldsValues(konnector, account);\n      var hasValuesForRequiredFields = manifest.hasValuesForRequiredFields(konnector, values);\n\n      if (hasValuesForRequiredFields) {\n        this.setState({\n          selectedCipher: selectedCipher\n        }, function () {\n          _this2.handleSubmit(values);\n        });\n      } else {\n        this.setState({\n          step: 'accountForm',\n          selectedCipher: selectedCipher,\n          showBackButton: true\n        });\n      }\n    }\n  }, {\n    key: \"cipherToAccount\",\n    value: function cipherToAccount(cipher) {\n      if (cipher === undefined) {\n        return null;\n      }\n\n      var identifierProperty = manifest.getIdentifier(this.props.konnector.fields);\n      var account = Account.fromCipher(cipher, {\n        identifierProperty: identifierProperty\n      });\n      return account;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.error && this.props.error !== prevProps.error) {\n        this.setState({\n          step: 'accountForm'\n        });\n      }\n    }\n    /**\n     * Tells whether we currently have a cipher selected or not\n     * selectedCipher === undefined means nothing has been selected\n     * selectedCipher === null means « from another account has been selected »\n     * selectedCipher === Object means a cipher has been selected\n     */\n\n  }, {\n    key: \"hasCipherSelected\",\n    value: function hasCipherSelected() {\n      return this.state.selectedCipher !== undefined;\n    }\n  }, {\n    key: \"showAccountForm\",\n    value: function showAccountForm() {\n      this.setState({\n        step: 'accountForm',\n        showBackButton: false\n      });\n    }\n  }, {\n    key: \"showCiphersList\",\n    value: function showCiphersList(ciphers) {\n      var newState = {\n        step: 'ciphersList'\n      };\n\n      if (ciphers) {\n        newState.ciphers = ciphers;\n      }\n\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleVaultUnlock\",\n    value: function () {\n      var _handleVaultUnlock = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var _this$props3, vaultClient, konnector, encryptedCiphers, ciphers;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this$props3 = this.props, vaultClient = _this$props3.vaultClient, konnector = _this$props3.konnector;\n                _context6.next = 3;\n                return vaultClient.getAll({\n                  type: CipherType.Login\n                });\n\n              case 3:\n                encryptedCiphers = _context6.sent;\n\n                if (!(encryptedCiphers.length === 0)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                this.showAccountForm();\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _context6.prev = 7;\n                _context6.next = 10;\n                return vaultClient.getAllDecrypted({\n                  type: CipherType.Login,\n                  uri: get(konnector, 'vendor_link')\n                });\n\n              case 10:\n                ciphers = _context6.sent;\n\n                if (ciphers.length === 0) {\n                  this.showAccountForm();\n                } else {\n                  this.showCiphersList(ciphers);\n                }\n\n                _context6.next = 18;\n                break;\n\n              case 14:\n                _context6.prev = 14;\n                _context6.t0 = _context6[\"catch\"](7);\n                // eslint-disable-next-line no-console\n                logger.error(\"Error while getting decrypted ciphers for \".concat(konnector.slug, \" konnector:\")); // eslint-disable-next-line no-console\n\n                logger.error(_context6.t0);\n\n              case 18:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[7, 14]]);\n      }));\n\n      function handleVaultUnlock() {\n        return _handleVaultUnlock.apply(this, arguments);\n      }\n\n      return handleVaultUnlock;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          triggerError = _this$props4.error,\n          konnector = _this$props4.konnector,\n          triggerRunning = _this$props4.running,\n          showError = _this$props4.showError,\n          modalContainerId = _this$props4.modalContainerId,\n          t = _this$props4.t,\n          onVaultDismiss = _this$props4.onVaultDismiss,\n          vaultClosable = _this$props4.vaultClosable;\n      var _this$state = this.state,\n          account = _this$state.account,\n          error = _this$state.error,\n          status = _this$state.status,\n          step = _this$state.step,\n          selectedCipher = _this$state.selectedCipher,\n          showBackButton = _this$state.showBackButton,\n          ciphers = _this$state.ciphers;\n      var submitting = !!(status === RUNNING || triggerRunning);\n      var modalInto = modalContainerId || MODAL_PLACE_ID;\n      var oauth = konnector.oauth;\n      var showSpinner = submitting && selectedCipher && step === 'ciphersList';\n      var showCiphersList = step === 'ciphersList';\n      var showAccountForm = step === 'accountForm';\n\n      if (oauth) {\n        return React.createElement(OAuthForm, {\n          account: account,\n          konnector: konnector,\n          onSuccess: this.handleOAuthAccountId,\n          submitting: submitting\n        });\n      }\n\n      if (showSpinner) {\n        return React.createElement(\"div\", {\n          className: \"u-flex u-flex-column u-flex-items-center\"\n        }, React.createElement(Spinner, {\n          size: \"xxlarge\"\n        }), React.createElement(\"p\", null, t('triggerManager.connecting')));\n      }\n\n      return React.createElement(KonnectorVaultUnlocker, {\n        konnector: konnector,\n        onDismiss: onVaultDismiss,\n        closable: vaultClosable,\n        onUnlock: this.handleVaultUnlock\n      }, React.createElement(\"div\", {\n        id: modalInto\n      }), showCiphersList && React.createElement(VaultCiphersList, {\n        konnector: konnector,\n        ciphers: ciphers,\n        onSelect: this.handleCipherSelect\n      }), showAccountForm && React.createElement(React.Fragment, null, showBackButton && React.createElement(ModalBackButton, {\n        onClick: function onClick() {\n          return _this3.showCiphersList();\n        },\n        label: t('back')\n      }), React.createElement(AccountForm, {\n        account: this.hasCipherSelected() ? this.cipherToAccount(selectedCipher) : account,\n        error: error || triggerError,\n        konnector: konnector,\n        onSubmit: this.handleSubmit,\n        showError: showError,\n        submitting: submitting,\n        onBack: function onBack() {\n          return _this3.showCiphersList();\n        },\n        readOnlyIdentifier: this.hasCipherSelected()\n      })));\n    }\n  }]);\n\n  return DumbTriggerManager;\n}(Component);\nDumbTriggerManager.propTypes = {\n  /**\n   * Account document. Used to get intial form values.\n   * If no account is passed, AccountForm will use empty initial values.\n   * @type {Object}\n   */\n  account: PropTypes.object,\n\n  /**\n   * Konnector document. AccountForm will check the `fields` object to compute\n   * fields.\n   * @type {Object}\n   */\n  konnector: PropTypes.object.isRequired,\n\n  /**\n   * Indicates if the TriggerManager has to show errors. Sometimes errors may be\n   * displayed elsewhere. However, a KonnectorJobError corresponding to a login\n   * error is always displayed. Transmitted to AccountForm.\n   * @type {Boolean}\n   */\n  showError: PropTypes.bool,\n\n  /**\n   * Existing trigger document to manage.\n   * @type {Object}\n   */\n  trigger: PropTypes.object,\n\n  /**\n   * Indicates if the given trigger is already running, i.e. if it has been\n   * launched and if an associated job with status 'running' exists.\n   * @type {[type]}\n   */\n  running: PropTypes.bool,\n\n  /**\n   * The current error for the job (string or KonnectorJob error)\n   */\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /**\n   * Function to call to launch the job\n   */\n  launch: PropTypes.func.isRequired,\n\n  /**\n   * Translation function\n   */\n  t: PropTypes.func,\n  //\n  // mutations\n  //\n\n  /**\n   * Permission mutation\n   * @type {Function}\n   */\n  addPermission: PropTypes.func,\n\n  /**\n   * File mutation\n   * @type {Function}\n   */\n  addReferencesTo: PropTypes.func,\n\n  /**\n   * Trigger mutation\n   * @type {Function}\n   */\n  createTrigger: PropTypes.func.isRequired,\n\n  /**\n   * Trigger mutations\n   * @type {Function}\n   */\n  createDirectoryByPath: PropTypes.func,\n\n  /**\n   * Account Mutation, used to retrieve OAuth account\n   * @type {Function}\n   */\n  findAccount: PropTypes.func,\n\n  /**\n   * Account mutation\n   * @type {Func}\n   */\n  saveAccount: PropTypes.func.isRequired,\n\n  /**\n   * Trigger mutations\n   * @type {Function}\n   */\n  statDirectoryByPath: PropTypes.func,\n\n  /**\n   * What to do when the Vault unlock screen is dismissed without password\n   */\n  onVaultDismiss: PropTypes.func.isRequired,\n\n  /**\n   * Whether the vault will be closable or not.\n   * @type {Boolean}\n   */\n  vaultClosable: PropTypes.bool\n};\nvar SmartTriggerManager = flow(translate(), withClient, withVaultClient, withMutations(accountsMutations, filesMutations, permissionsMutations, triggersMutations))(DumbTriggerManager); // The TriggerManager is wrapped in the providers required for it to work by\n// itself instead of receiving it from its parents because it is used as\n// standalone in places like cozy-home intents\n\nexport var TriggerManager = function TriggerManager(props) {\n  return React.createElement(HarvestVaultProvider, null, React.createElement(MuiCozyTheme, null, React.createElement(SmartTriggerManager, props)));\n}; // TriggerManager is exported wrapped in TriggerLauncher to avoid breaking changes.\n\nvar LegacyTriggerManager = function LegacyTriggerManager(props) {\n  var onLaunch = props.onLaunch,\n      onSuccess = props.onSuccess,\n      onLoginSuccess = props.onLoginSuccess,\n      onError = props.onError,\n      initialTrigger = props.initialTrigger,\n      otherProps = _objectWithoutProperties(props, [\"onLaunch\", \"onSuccess\", \"onLoginSuccess\", \"onError\", \"initialTrigger\"]);\n\n  return React.createElement(TriggerLauncher, {\n    onLaunch: onLaunch,\n    onSuccess: onSuccess,\n    onLoginSuccess: onLoginSuccess,\n    onError: onError,\n    initialTrigger: initialTrigger\n  }, function (_ref7) {\n    var error = _ref7.error,\n        launch = _ref7.launch,\n        running = _ref7.running,\n        trigger = _ref7.trigger;\n    return React.createElement(TriggerManager, _extends({}, otherProps, {\n      error: error,\n      launch: launch,\n      running: running,\n      trigger: trigger\n    }));\n  });\n};\n\nexport default LegacyTriggerManager;"],"sourceRoot":""}